print("Задача 5. Марсоход 2")

# К роботу Валли отправили ещё одного робота Билли.
# Это его первый поход на Марс,
# поэтому он тестируется в прямоугольном помещении размером 15 на 20 метров.
# Марсоход высаживается в центре комнаты (в точке 8, 10),
# после чего управление им передаётся оператору - пользователю вашей программы.
#
# Программа спрашивает
# в какую сторону оператор хочет направить робота:
# север (клавиша W),
# юг (клавиша S),
# запад (клавиша A)
# или восток (клавиша D).
#
# Оператор делает выбор,
# марсоход перемещается на 1 метр в эту сторону и программа сообщает новую позицию марсохода.
# Если марсоход упёрся в стену,
# то он не должен пытаться перемещаться в сторону стены, в этом случае его позиция не меняется.
#
# Пример:
#
# [Программа]: Марсоход находится на позиции 6, 19, введите команду:
# [Оператор]: A
# [Программа]: Марсоход находится на позиции 5, 19, введите команду:
# [Оператор]: W
# [Программа]: Марсоход находится на позиции 5, 20, введите команду:
# [Оператор]: W
# [Программа]: Марсоход находится на позиции 5, 20, введите команду:

# Задача 5: а) вложенные условные операторы сильно усложняют программу, объедините сравнение введённого символа со сравнением с границей поля в одно составное условие используя оператор логического И;
# б) изменять шаг по направлению в случае достижения границы не нужно, достаточно просто блокировать "проходить сквозь стену", то есть не изменять координату если она при этом выйдет за границу, что реализуется в пункте а)

nord = "w"
south = "s"
west = "a"
east = "d"
latitude = 8
longitude = 10
latitudeStep = 1
longitudeStep = 1

while True:
  print(f"Марсоход находится на позиции {longitude}, {latitude}, введите команду:")
  motion = input("Введите направление движения: ")

  if motion == nord and latitude != 15:
      latitude += latitudeStep
  elif motion == south and latitude != 0:
      latitude -= latitudeStep
  elif motion == west and longitude != 0:
      longitude -= longitudeStep
  elif motion == east and longitude != 20:
      longitude += longitudeStep

